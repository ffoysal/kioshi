version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/kioshi # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8.11.4 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout: # special step to check out source code to working directory
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "./server/package.json" }}
      - run:
          name: npm package installation
          command: cd server && npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "./server/package.json" }}
          paths:
            - ./server/node_modules
      - run: # run tests
          name: test
          command: cd server && npm test

      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: server/coverage
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: server/coverage
          prefix: test
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  publish-container:
    machine: true
    steps:
      - checkout:
      - run:
          name: Publish Docker Image to Docker Hub
          commaand: |
            docker build -t ffoysal/kioshi:latest .
            docker tag ffoysal/kioshi:latest ffoysal/kioshi:$CIRCLE_BUILD_NUM
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ffoysal/kioshi:latest
            docker push ffoysal/kioshi:$CIRCLE_BUILD_NUM
workflows:
  version: 2
  build-master:
    jobs:
      - build
      - publish-container:
          requires:
            - build
          filters:
            branches:
              only: master
